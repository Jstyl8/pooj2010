package opoo.practica1.fecha;
import java.awt.*;

import opoo.excepciones.FechaMalFormadaException;

public class ventana extends Frame
{
	public ventana()
	{
	    //{{INIT_MENUS
		menu1.setLabel("Archivo");
		menu1.add(newMenuItem);
		newMenuItem.setEnabled(false);
		newMenuItem.setLabel("Nuevo");
		newMenuItem.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_N,false));
		menu1.add(openMenuItem);
		openMenuItem.setLabel("Abrir...");
		openMenuItem.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_O,false));
		menu1.add(saveMenuItem);
		saveMenuItem.setEnabled(false);
		saveMenuItem.setLabel("Guardar");
		saveMenuItem.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_S,false));
		menu1.add(saveAsMenuItem);
		saveAsMenuItem.setEnabled(false);
		saveAsMenuItem.setLabel("Guardar Como...");
		menu1.add(separatorMenuItem);
		separatorMenuItem.setLabel("-");
		menu1.add(exitMenuItem);
		exitMenuItem.setLabel("Salir");
		mainMenuBar.add(menu1);
		menu2.setLabel("Editar");
		menu2.add(cutMenuItem);
		cutMenuItem.setEnabled(false);
		cutMenuItem.setLabel("Cortar");
		cutMenuItem.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_X,false));
		menu2.add(copyMenuItem);
		copyMenuItem.setEnabled(false);
		copyMenuItem.setLabel("Copiar");
		copyMenuItem.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_C,false));
		menu2.add(pasteMenuItem);
		pasteMenuItem.setEnabled(false);
		pasteMenuItem.setLabel("Pegar");
		pasteMenuItem.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_V,false));
		mainMenuBar.add(menu2);
		menu3.setLabel("Ayuda");
		menu3.add(aboutMenuItem);
		aboutMenuItem.setLabel("About...");
		mainMenuBar.add(menu3);
		setMenuBar(mainMenuBar);
		//}}
		
		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		openMenuItem.addActionListener(lSymAction);
		exitMenuItem.addActionListener(lSymAction);
		aboutMenuItem.addActionListener(lSymAction);
		//SymMouse aSymMouse = new SymMouse();
		SymItem lSymItem = new SymItem();
		choice3.addItemListener(lSymItem);
		exit.addActionListener(lSymAction);
		cancel.addActionListener(lSymAction);
		//cancel.addMouseListener(aSymMouse);
		ok.addActionListener(lSymAction);
		//ok.addMouseListener(aSymMouse);
		année.addActionListener(lSymAction);
		//}}
	    
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		
		//{{INIT_CONTROLS
		setLayout(null);
		setBackground(new java.awt.Color(252,245,254));
		setSize(362,256);
		setVisible(false);
		openFileDialog1.setMode(FileDialog.LOAD);
		openFileDialog1.setTitle("Abrir");
		//$$ openFileDialog1.move(24,312);
		label1.setText("Seleccione una fecha :");
		add(label1);
		label1.setForeground(new java.awt.Color(58,0,117));
		label1.setFont(new Font("Dialogo", Font.BOLD, 12));
		label1.setBounds(72,24,288,46);
		choice2.addItem("Mes");
		choice2.addItem("Enero");
		choice2.addItem("Febrero");
		choice2.addItem("Marzo");
		choice2.addItem("Abril");
		choice2.addItem("Mayo");
		choice2.addItem("Junio");
		choice2.addItem("Julio");
		choice2.addItem("Agosto");
		choice2.addItem("Septiembre");
		choice2.addItem("Octubre");
		choice2.addItem("Noviembre");
		choice2.addItem("Diciembre");
		try {
			choice2.select(0);
		}
		catch (IllegalArgumentException e) { }
		add(choice2);
		choice2.setBounds(144,84,96,21);
		année.setText("año");
		add(année);
		année.setBounds(252,84,60,23);
		choice3.addItem("dia");
		choice3.addItem("01");
		choice3.addItem("02");
		choice3.addItem("03");
		choice3.addItem("04");
		choice3.addItem("05");
		choice3.addItem("06");
		choice3.addItem("07");
		choice3.addItem("08");
		choice3.addItem("09");
		choice3.addItem("10");
		choice3.addItem("11");
		choice3.addItem("12");
		choice3.addItem("13");
		choice3.addItem("14");
		choice3.addItem("15");
		choice3.addItem("16");
		choice3.addItem("17");
		choice3.addItem("18");
		choice3.addItem("19");
		choice3.addItem("20");
		choice3.addItem("21");
		choice3.addItem("22");
		choice3.addItem("23");
		choice3.addItem("24");
		choice3.addItem("25");
		choice3.addItem("26");
		choice3.addItem("27");
		choice3.addItem("28");
		choice3.addItem("29");
		choice3.addItem("30");
		choice3.addItem("31");
		try {
			choice3.select(0);
		}
		catch (IllegalArgumentException e) { }
		add(choice3);
		choice3.setBounds(36,84,96,21);
		ok.setLabel("ok");
		ok.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		add(ok);
		ok.setBackground(new java.awt.Color(152,162,231));
		ok.setBounds(120,132,132,25);
		exit.setLabel("exit");
		exit.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		add(exit);
		exit.setBackground(new java.awt.Color(152,162,231));
		exit.setBounds(24,132,67,25);
		cancel.setLabel("cancel");
		cancel.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		add(cancel);
		cancel.setBackground(new java.awt.Color(152,162,231));
		cancel.setBounds(276,132,67,25);
		resultat.setText("resultat");
		add(resultat);
		resultat.setBackground(new java.awt.Color(252,245,254));
		resultat.setForeground(new java.awt.Color(187,26,126));
		resultat.setFont(new Font("Dialogo", Font.BOLD, 13));
		resultat.setBounds(156,192,114,26);
		resultat.setVisible(false);
		setTitle("AWT Application");
		//}}				
	}
	
	public ventana(String title)
	{
		this();
		setTitle(title);
	}
	
	static public void main(String args[])
	{
		try
		{
			//Create a new instance of our application's frame, and make it visible.
    		(new ventana()).setVisible(true);
		}
		catch (Throwable t)
		{
			System.err.println(t);
			t.printStackTrace();
			//Ensure the application exits with an error condition.
			System.exit(1);
		}
	}
	
	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension d = getSize();
		
		super.addNotify();
	
		if (fComponentsAdjusted)
			return;
	
		// Adjust components according to the insets
		setSize(getInsets().left + getInsets().right + d.width, getInsets().top + getInsets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(getInsets().left, getInsets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}
	
	// Used for addNotify check.
	boolean fComponentsAdjusted = false;
	
	//{{DECLARE_CONTROLS
	java.awt.FileDialog openFileDialog1 = new java.awt.FileDialog(this);
	java.awt.Label label1 = new java.awt.Label();
	java.awt.Choice choice2 = new java.awt.Choice();
	java.awt.TextField année = new java.awt.TextField();
	java.awt.Choice choice3 = new java.awt.Choice();
	java.awt.Button ok = new java.awt.Button();
	java.awt.Button exit = new java.awt.Button();
	java.awt.Button cancel = new java.awt.Button();
	java.awt.Label resultat = new java.awt.Label();
	//}}
	
	//{{DECLARE_MENUS
	java.awt.MenuBar mainMenuBar = new java.awt.MenuBar();
	java.awt.Menu menu1 = new java.awt.Menu();
	java.awt.MenuItem newMenuItem = new java.awt.MenuItem();
	java.awt.MenuItem openMenuItem = new java.awt.MenuItem();
	java.awt.MenuItem saveMenuItem = new java.awt.MenuItem();
	java.awt.MenuItem saveAsMenuItem = new java.awt.MenuItem();
	java.awt.MenuItem separatorMenuItem = new java.awt.MenuItem();
	java.awt.MenuItem exitMenuItem = new java.awt.MenuItem();
	java.awt.Menu menu2 = new java.awt.Menu();
	java.awt.MenuItem cutMenuItem = new java.awt.MenuItem();
	java.awt.MenuItem copyMenuItem = new java.awt.MenuItem();
	java.awt.MenuItem pasteMenuItem = new java.awt.MenuItem();
	java.awt.Menu menu3 = new java.awt.Menu();
	java.awt.MenuItem aboutMenuItem = new java.awt.MenuItem();
	//}}
	
	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosed(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == ventana.this)
				Frame1_WindowClosed(event);
		}

		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == ventana.this)
				Frame1_WindowClosing(event);
		}
	}
	
	void Frame1_WindowClosing(java.awt.event.WindowEvent event)
	{
		// to do: code goes here.
			 
		Frame1_WindowClosing_Interaction1(event);
	}


	void Frame1_WindowClosing_Interaction1(java.awt.event.WindowEvent event)
	{
		try {
			// QuitDialog Create and show as modal
			(new QuitDialog(this, true)).setVisible(true);
		} catch (Exception e) {
		}
	}

	
	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == openMenuItem)
				openMenuItem_ActionPerformed(event);
			else if (object == aboutMenuItem)
				aboutMenuItem_ActionPerformed(event);
			else if (object == exitMenuItem)
				exitMenuItem_ActionPerformed(event);
			else if (object == exit)
				exit_ActionPerformed(event);
			else if (object == cancel)
				cancel_ActionPerformed(event);
			else if (object == ok)
				ok_ActionPerformed(event);
						
		}
	}
	
	void openMenuItem_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		openMenuItem_ActionPerformed_Interaction1(event);
	}


	void openMenuItem_ActionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// OpenFileDialog Create and show as modal
		    int		defMode         = openFileDialog1.getMode();
		    String	defTitle        = openFileDialog1.getTitle();
		    String defDirectory     = openFileDialog1.getDirectory();
		    String defFile          = openFileDialog1.getFile();

		    openFileDialog1 = new java.awt.FileDialog(this, defTitle, defMode);
		    openFileDialog1.setDirectory(defDirectory);
		    openFileDialog1.setFile(defFile);
		    openFileDialog1.setVisible(true);
		} catch (Exception e) {
		}
	}


	void aboutMenuItem_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
	}
	
	
	void exitMenuItem_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		exitMenuItem_ActionPerformed_Interaction1(event);
	}


	void exitMenuItem_ActionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// QuitDialog Create and show as modal
		    (new QuitDialog(this, true)).setVisible(true);
		} catch (Exception e) {
		}
	}


	class SymItem implements java.awt.event.ItemListener
	{
		public void itemStateChanged(java.awt.event.ItemEvent event)
		{
			Object object = event.getSource();
			if (object == choice3)
				choice3_ItemStateChanged(event);
		}
	}

	void choice3_ItemStateChanged(java.awt.event.ItemEvent event)
	{
		// to do: code goes here.			 
	}

	void exit_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		System.exit(0);  
	}

	void cancel_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		choice2.select(0);
		choice3.select(0);
		année.setText("année");
		resultat.setVisible(false);
	}


	void ok_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		int a,m,j;
		j=Integer.parseInt(choice3.getSelectedItem());
		m=choice2.getSelectedIndex();
		a=Integer.parseInt(année.getText());
		String j_nais="Día no valido";
		Fecha fec=null;
		try {
			fec = new Fecha (j,m,a);
		} catch (FechaMalFormadaException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int result=fec.calcul();
		if(result==0) j_nais="Miercoles";
	    if(result==1) j_nais="Jueves";
	    if(result==2) j_nais="Viernes";
	    if(result==3) j_nais="Sabado";
	    if(result==4) j_nais="Domingo";
	    if(result==5) j_nais="Lunes";
	    if(result==6) j_nais="Martes";
	    resultat.setText(j_nais);
		resultat.setVisible(true);	
	}
	
	void Frame1_WindowClosed(java.awt.event.WindowEvent event)
	{
		// to do: code goes here.
	}
/* CALCULA EL DÍA DE LA SEMANA	
	int calcul(){
		Integer day = new Integer(//CUAL ES EL INDICE DEL DÍA 1..31 );
        Integer month = new Integer(//NUMERO DEL MES 1..12);
        Integer year = new Integer(//AÑO );
	    int A=2003;int M;
        int [] T=new int[12];
        T[0]=31;
        T[1]=28;
        T[2]=31;
        T[3]=30;
        T[4]=31;
        T[5]=30;
        T[6]=31;
        T[7]=31;
        T[8]=30;
        T[9]=31;
        T[10]=30;
        T[11]=31;
	int N=0;int result=10;
	if((year-year/4*4)!=0 && month==2 && day==29)       result=10;
	else{
	    
	if(year<A){
		A--;
		M=12;
		while(year<A){
			if((year-year/4*4)==0){
				N=N+52*7+2;
				}
			else
				N=N+52*7+1;
			A--;
			}
		while(month<M){
			N=N+T[month-1];
			M--;
			}
		N=N+T[M-1]-day+1;
		if((A-A/4*4)==0 && month<=2)
			N++;
		result=N-N/7*7;
		if(result!=0)   result=7-result;
		
		}
	A=2003;
	if(year>=A){
		M=1;
		while(year>A){
			if((A-A/4*4)==0){
				N=N+52*7+2;
				}
			else
				N=N+52*7+1;
			A++;
			}
		while(month>M){
			N=N+T[M-1];
			M++;
			}
		N=N+day-1;
		if((A-A/4*4)==0 && M>2)
			N++;
		result=N-N/7*7;
		}
    }
	return result;
	}
        
} */

}

    